"""add_firebase_uid_to_user

Revision ID: adc96f8b8a52
Revises: add_travel_history_tables
Create Date: 2025-10-19 03:51:05.528959

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import sqlite

# revision identifiers, used by Alembic.
revision = 'adc96f8b8a52'
down_revision = 'add_travel_history_tables'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('favorite_routes',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('origin_name', sa.String(length=255), nullable=True),
    sa.Column('origin_lat', sa.Float(), nullable=True),
    sa.Column('origin_lng', sa.Float(), nullable=True),
    sa.Column('destination_name', sa.String(length=255), nullable=True),
    sa.Column('destination_lat', sa.Float(), nullable=True),
    sa.Column('destination_lng', sa.Float(), nullable=True),
    sa.Column('route_summary', sa.JSON(), nullable=True),
    sa.Column('is_default', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_favorite_routes_id'), 'favorite_routes', ['id'], unique=False)
    op.create_table('travel_sessions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('origin_name', sa.String(length=255), nullable=True),
    sa.Column('origin_lat', sa.Float(), nullable=True),
    sa.Column('origin_lng', sa.Float(), nullable=True),
    sa.Column('destination_name', sa.String(length=255), nullable=True),
    sa.Column('destination_lat', sa.Float(), nullable=True),
    sa.Column('destination_lng', sa.Float(), nullable=True),
    sa.Column('route_data', sa.JSON(), nullable=True),
    sa.Column('duration_minutes', sa.Float(), nullable=True),
    sa.Column('distance_km', sa.Float(), nullable=True),
    sa.Column('start_time', sa.DateTime(), nullable=True),
    sa.Column('end_time', sa.DateTime(), nullable=True),
    sa.Column('travel_mode', sa.String(length=50), nullable=True),
    sa.Column('traffic_conditions', sa.String(length=50), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_travel_sessions_id'), 'travel_sessions', ['id'], unique=False)
    op.drop_index('ix_traffic_lines_id', table_name='traffic_lines')
    op.drop_table('traffic_lines')
    op.alter_column('content_moderation_queue', 'content_metadata',
               existing_type=sa.TEXT(),
               type_=sa.JSON(),
               existing_nullable=True)
    op.alter_column('data_export_jobs', 'parameters',
               existing_type=sa.TEXT(),
               type_=sa.JSON(),
               existing_nullable=True)
    op.alter_column('emergencies', 'is_verified',
               existing_type=sa.BOOLEAN(),
               nullable=False,
               existing_server_default=sa.text('0'))
    op.alter_column('emergencies', 'verification_status',
               existing_type=sa.VARCHAR(length=20),
               nullable=False,
               existing_server_default=sa.text("'pending'"))
    op.alter_column('emergencies', 'moderation_priority',
               existing_type=sa.VARCHAR(length=20),
               nullable=False,
               existing_server_default=sa.text("'normal'"))
    op.create_foreign_key(None, 'emergencies', 'users', ['verified_by'], ['id'])
    op.alter_column('notification_templates', 'variables',
               existing_type=sa.TEXT(),
               type_=sa.JSON(),
               existing_nullable=True)
    op.alter_column('security_events', 'event_metadata',
               existing_type=sa.TEXT(),
               type_=sa.JSON(),
               existing_nullable=True)
    op.alter_column('system_alerts', 'target_roles',
               existing_type=sa.TEXT(),
               type_=sa.JSON(),
               existing_nullable=True)
    op.alter_column('system_metrics', 'tags',
               existing_type=sa.TEXT(),
               type_=sa.JSON(),
               existing_nullable=True)
    op.alter_column('system_settings', 'setting_type',
               existing_type=sa.VARCHAR(length=20),
               type_=sa.Enum('STRING', 'INTEGER', 'BOOLEAN', 'JSON', 'FLOAT', name='settingtype'),
               existing_nullable=True)
    op.alter_column('traffic_monitoring', 'id',
               existing_type=sa.INTEGER(),
               nullable=False,
               autoincrement=True)
    op.alter_column('traffic_monitoring', 'barangay',
               existing_type=sa.TEXT(),
               type_=sa.String(length=100),
               existing_nullable=False,
               existing_server_default=sa.text("'Unknown'"))
    op.alter_column('traffic_monitoring', 'data_source',
               existing_type=sa.TEXT(),
               type_=sa.String(length=50),
               existing_nullable=False,
               existing_server_default=sa.text("'tomtom_api'"))
    op.alter_column('traffic_monitoring', 'confidence_score',
               existing_type=sa.REAL(),
               type_=sa.Float(),
               existing_nullable=False,
               existing_server_default=sa.text('(1.0)'))
    op.create_index(op.f('ix_traffic_monitoring_id'), 'traffic_monitoring', ['id'], unique=False)
    op.add_column('users', sa.Column('firebase_uid', sa.String(length=255), nullable=True))
    op.add_column('users', sa.Column('is_verified', sa.Boolean(), nullable=False))
    op.create_index(op.f('ix_users_firebase_uid'), 'users', ['firebase_uid'], unique=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_users_firebase_uid'), table_name='users')
    op.drop_column('users', 'is_verified')
    op.drop_column('users', 'firebase_uid')
    op.drop_index(op.f('ix_traffic_monitoring_id'), table_name='traffic_monitoring')
    op.alter_column('traffic_monitoring', 'confidence_score',
               existing_type=sa.Float(),
               type_=sa.REAL(),
               existing_nullable=False,
               existing_server_default=sa.text('(1.0)'))
    op.alter_column('traffic_monitoring', 'data_source',
               existing_type=sa.String(length=50),
               type_=sa.TEXT(),
               existing_nullable=False,
               existing_server_default=sa.text("'tomtom_api'"))
    op.alter_column('traffic_monitoring', 'barangay',
               existing_type=sa.String(length=100),
               type_=sa.TEXT(),
               existing_nullable=False,
               existing_server_default=sa.text("'Unknown'"))
    op.alter_column('traffic_monitoring', 'id',
               existing_type=sa.INTEGER(),
               nullable=True,
               autoincrement=True)
    op.alter_column('system_settings', 'setting_type',
               existing_type=sa.Enum('STRING', 'INTEGER', 'BOOLEAN', 'JSON', 'FLOAT', name='settingtype'),
               type_=sa.VARCHAR(length=20),
               existing_nullable=True)
    op.alter_column('system_metrics', 'tags',
               existing_type=sa.JSON(),
               type_=sa.TEXT(),
               existing_nullable=True)
    op.alter_column('system_alerts', 'target_roles',
               existing_type=sa.JSON(),
               type_=sa.TEXT(),
               existing_nullable=True)
    op.alter_column('security_events', 'event_metadata',
               existing_type=sa.JSON(),
               type_=sa.TEXT(),
               existing_nullable=True)
    op.alter_column('notification_templates', 'variables',
               existing_type=sa.JSON(),
               type_=sa.TEXT(),
               existing_nullable=True)
    op.drop_constraint(None, 'emergencies', type_='foreignkey')
    op.alter_column('emergencies', 'moderation_priority',
               existing_type=sa.VARCHAR(length=20),
               nullable=True,
               existing_server_default=sa.text("'normal'"))
    op.alter_column('emergencies', 'verification_status',
               existing_type=sa.VARCHAR(length=20),
               nullable=True,
               existing_server_default=sa.text("'pending'"))
    op.alter_column('emergencies', 'is_verified',
               existing_type=sa.BOOLEAN(),
               nullable=True,
               existing_server_default=sa.text('0'))
    op.alter_column('data_export_jobs', 'parameters',
               existing_type=sa.JSON(),
               type_=sa.TEXT(),
               existing_nullable=True)
    op.alter_column('content_moderation_queue', 'content_metadata',
               existing_type=sa.JSON(),
               type_=sa.TEXT(),
               existing_nullable=True)
    op.create_table('traffic_lines',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('road_name', sa.VARCHAR(length=255), nullable=False),
    sa.Column('road_type', sa.VARCHAR(length=11), nullable=False),
    sa.Column('line_coordinates', sqlite.JSON(), nullable=False),
    sa.Column('traffic_status', sa.VARCHAR(length=10), nullable=False),
    sa.Column('average_speed_kmh', sa.FLOAT(), nullable=True),
    sa.Column('vehicle_count', sa.INTEGER(), nullable=False),
    sa.Column('congestion_percentage', sa.FLOAT(), nullable=False),
    sa.Column('estimated_travel_time', sa.FLOAT(), nullable=True),
    sa.Column('line_length_km', sa.FLOAT(), nullable=False),
    sa.Column('line_width', sa.FLOAT(), nullable=False),
    sa.Column('line_color', sa.VARCHAR(length=20), nullable=False),
    sa.Column('min_lat', sa.FLOAT(), nullable=False),
    sa.Column('max_lat', sa.FLOAT(), nullable=False),
    sa.Column('min_lng', sa.FLOAT(), nullable=False),
    sa.Column('max_lng', sa.FLOAT(), nullable=False),
    sa.Column('barangay', sa.VARCHAR(length=100), nullable=True),
    sa.Column('is_active', sa.BOOLEAN(), nullable=False),
    sa.Column('data_source', sa.VARCHAR(length=100), nullable=False),
    sa.Column('last_updated', sa.DATETIME(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('created_at', sa.DATETIME(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_traffic_lines_id', 'traffic_lines', ['id'], unique=False)
    op.drop_index(op.f('ix_travel_sessions_id'), table_name='travel_sessions')
    op.drop_table('travel_sessions')
    op.drop_index(op.f('ix_favorite_routes_id'), table_name='favorite_routes')
    op.drop_table('favorite_routes')
    # ### end Alembic commands ###
